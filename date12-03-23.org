#+AUTHOR: Yuuhi
#+TITLE: 3月の記録２
#+LANGUAGE: ja
#+HTML: <meta content='no-cache' http-equiv='Pragma' />
#+STYLE: <link rel="stylesheet" type="text/css" href="./org-mode.css">

* 23日
# プログラマの数学の説明をJSで書きながら再読しようと思う．

** 一つタスクを食べた
** もう少し急げ

* 24日
あへあへ

* 25日
買った．

Emacs実践入門　~思考を直感的にコード化し、開発を加速する (WEB+DB PRESS plus) [単行本（ソフトカバー）]\\
http://www.amazon.co.jp/gp/product/4774150029/

機能は

#+begin_src emacs-lisp
;;; revive.el の設定
(add-to-list 'load-path "~/.emacs.d/elisp/revive/")
(autoload 'save-current-configuration "revive" "Save status" t)
(autoload 'resume "revive" "Resume Emacs" t)
(autoload 'wipe "revive" "Wipe emacs" t)
(define-key ctl-x-map "F" 'resume) ;; C-x F で復元
(define-key ctl-x-map "K" 'wipe) ;; C-x K で Kill
(add-hook 'kill-emacs-hook 'save-current-configuration) ;; 終了時に保存
(resume) ; 起動時に復元
#+end_src

* 26日
今日もうねうね

** Rubyのeachとeach\_with\_index
#+begin_src ruby
#0から10までを表示するプログラム
(0..10).each{|e|
  puts e
}

(0..10).each_with_index{|e,index|
  puts "#{index}番目が#{e}"
}
#+end_src
インデックスも引数で受け取れる

* 27日
DTIのVPSに日記も引っ越し．
githubのリポジトリのpushにhookして，postがなげられ，それに反応してこっちが更新される仕組み．

** Emacsにegg.el導入
#+begin_src emacs_lisp
;; egg.el
(add-to-list 'load-path "~/.emacs.d/elisp/egg/")
(when (executable-find "git")
  (require 'egg nil t))
#+end_src
https://github.com/bogolisk/egg/wiki
*** リファレンス

| key     | lisp                            | description                                                                                                                        |
|---------+---------------------------------+------------------------------------------------------------------------------------------------------------------------------------|
| C-x v d | egg-status                      | shows the repo’s current status. git status && git diff && git diff --cached && ...                                               |
| C-x v c | egg-commit-log-edit             | start editing the commit message for the current staged changes. With a prefix (C-u C-x v c), amend HEAD instead. git commit -e … |
| C-x v i | egg-file-stage-current-file     | stage new changes of the current file. git add                                                                                     |
| C-x v l | egg-log                         | shows HEAD’s history . With a prefix (C-u C-x v l), show history of all refs.  git log                                            |
| C-x v o | egg-file-checkout-other-version | checkout another version of the current file. git checkout REV file                                                                |
| C-x v u | egg-file-cancel-modifications   | unconditionally delete unstaged modifications in the current file. git checkout …                                                 |
| C-x v v | egg-next-action                 | perform the next logical action. git dwim                                                                                          |
| C-x v = | egg-file-diff                   | compare file with index or other commits.git diff…                                                                                |
| C-x v ~ | egg-file-version-other-window   | show other version of the current file. git checkout…                                                                             |
| C-x v b | egg-start-new-branch            | start a new branch from the current HEAD.git checkout -b new_branch                                                                |
| C-x v a | egg-file-toggle-blame-mode      | enable/disable blame attributions (using overlays) in the current buffer.git blame                                                 |

*** githubのhookのpost recieve動かん
Githubへのpush時に一緒に更新ができなくなった．．

分からん．



** Emacsからirb使えるようにした
[Ctrl-c Ctrl-s]でirb起動．
基本はリージョンで範囲指定して[Ctrl-c r]でirbへ送る．
#+begin_src lisp
(require 'ruby-electric nil t)
(when (require 'ruby-block nil t)
  (setq ruby-block-highlight-toggle t))
(autoload 'run-ruby "inf-ruby"
  "Ruby an inferior Ruby process")
(autoload 'inf-ruby-keys "inf-ruby"
  "Set local key defs for inf-ruby in ruby-mode")
(setq ruby-mode-hooks
      (lambda ()
	(inf-ruby-keys)
	(ruby-electric-mode t)
	(ruby-block-mode t)))
(add-hook 'ruby-mode-hook ruby-mode-hooks)
#+end_src


** brewからMySQLインストール
#+begin_example
# mysql 5.5.20
# http://dev.mysql.com/doc/refman/5.5/en/
# Depends on: cmake, readline, pidof
# /usr/local/Cellar/mysql/5.5.20 (6336 files, 221M)

# Set up databases to run AS YOUR USER ACCOUNT with:
#     unset TMPDIR
#     mysql_install_db --verbose --user=`whoami` --basedir="$(brew --prefix mysql)" --datadir=/usr/local/var/mysql --tmpdir=/tmp

# To set up base tables in another folder, or use a different user to run
# mysqld, view the help for mysqld_install_db:
#     mysql_install_db --help

# and view the MySQL documentation:
#   * http://dev.mysql.com/doc/refman/5.5/en/mysql-install-db.html
#   * http://dev.mysql.com/doc/refman/5.5/en/default-privileges.html

# To run as, for instance, user "mysql", you may need to `sudo`:
#     sudo mysql_install_db ...options...

# Start mysqld manually with:
#     mysql.server start

#     Note: if this fails, you probably forgot to run the first two steps up above

# A "/etc/my.cnf" from another install may interfere with a Homebrew-built
# server starting up correctly.

# To connect:
#     mysql -uroot

# To launch on startup:
# * if this is your first install:
#     mkdir -p ~/Library/LaunchAgents
#     cp /usr/local/Cellar/mysql/5.5.20/homebrew.mxcl.mysql.plist ~/Library/LaunchAgents/
#     launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist

# * if this is an upgrade and you already have the homebrew.mxcl.mysql.plist loaded:
#     launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
#     cp /usr/local/Cellar/mysql/5.5.20/homebrew.mxcl.mysql.plist ~/Library/LaunchAgents/
#     launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist

# You may also need to edit the plist to use the correct "UserName".

# http://github.com/mxcl/homebrew/commits/master/Library/Formula/mysql.rb
#+end_example
http://d.hatena.ne.jp/littlebuddha/20111109/1320851331
#+begin_example
unset TMPDIR
mysql_install_db --verbose --user=`whoami` --basedir="$(brew --prefix mysql)" --datadir=/usr/local/var/mysql --tmpdir=/tmp
mysql.server start
mysql -u root
# でログイン
#+end_example
らしい

** call/cc，Fiber，並行処理(concurrent processing)，coroutine
- Luaの本にcoroutine(協調スレッド)の話がのっていたのを覚えている．
  - Luaやってみたい！
    - ゲームも作りたい！
#+begin_example
しあわせは歩いてこない．だから歩いて行くんだね．一日一歩，三日で三歩，三歩さがって，そして絶望して死ぬ
#+end_example

* 28日
熱っぽい

* 29日
** Bot修正
- 自分のリツイートに反応しないように
- yuuhi111からの命令を日本語に
  - おねがい.*(yuuhi111)を(そこそこ|すごい|すっごい)ふぁぼって？

** beamerの設定がよく分からん
2->5でなんかおかしくなる．

** 今日中にStreamのことを調べる
http://www.geocities.jp/m_hiroi/func/abcscm23.html

#+begin_src scheme
; 遅延ストリームの生成
(define-syntax stream-cons
  (syntax-rules ()
    ((_ a b) (cons a (delay b)))))

; 要素を取り出す
(define (stream-car s) (car s))

; 次の要素を取り出す
(define (stream-cdr s) (force (cdr s)))

; ストリームの終端
(define nil '())
(define empty? null?)
#+end_src

** MySQLのインストール
mysql_install_db


#+begin_example
/usr/bin/mysql -u root mysql

#+end_example
- 大学入 13:00
- 大学出 16:00

* 30日
みうみうみうみうみうみうみうみうみうみう

* 31日
** ドラクリオットとは
えろげ．みうがかわいい．みうみう
http://yuzu-soft.com/

** 帰省
東京 09:40～13:04 岡山，ＪＲ新幹線のぞみ159号



